{
  "openapi": "3.0.3",
  "info": {
    "title": "Category Content API Documentation",
    "version": "1.0.0",
    "description": "System for managing multimedia content by type of user."
  },
  "servers": [
    {
      "url": "http://api.example.com/v1"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Endpoints to handle the user register, authentication, update."
    },
    {
      "name": "category",
      "description": "Element that classify the different contents."
    },
    {
      "name": "content",
      "description": "Elements that contains video, images or text related to a Category and brings information to the user."
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "User registration.",
        "description": "This endpoint has public access. A user can send this request to create a new user with his data in the system.",
        "operationId": "userRegister",
        "requestBody": {
          "description": "Create a new user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string"
                        }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/categories/summary": {
      "get": {
        "summary": "Get a summary of all categories",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategorySummary"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error getting category summary"
          }
        }
      }
    },
    "/categories/{categoryId}/contents": {
      "get": {
        "summary": "Get contents by category",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Content"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error getting contents by category"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6660f509b0683eb2b3e9082f"
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "role": {
            "type": "string",
            "description": "Role of the user, this could limit the access to some functionalities.",
            "example": "reader",
            "enum": [
                "admin",
                "creator",
                "reader"
            ]
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "url"
          }
        },
        "xml": {
          "name": "category"
        }
      },
      "Content": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Type of the content.",
            "example": "video",
            "enum": [
                "image",
                "video",
                "text"
            ]
          },
          "url": {
            "type": "string",
            "description": "Link to the multimedia or text file."
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          }
        },
        "xml": {
          "name": "content"
        }
      },
      "CategorySummary": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "totalContents": {
            "type": "number"
          },
          "contentTypes": {
            "type": "object",
            "properties": {
              "image": {
                "type": "number"
              },
              "video": {
                "type": "number"
              },
              "text": {
                "type": "number"
              }
            }
          },
          "image": {
            "type": "url",
            "description": "Category image."
          },
          "createdAt": {
            "type": "date",
            "description": "Creation date of the Category."
          }
        }
      },
      "ContentByCategory": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Content"
          },
          "category": {
            "type": "object",
            "properties": {
              "id": {
                  "$ref": "#/components/schemas/Category"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/User"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
  